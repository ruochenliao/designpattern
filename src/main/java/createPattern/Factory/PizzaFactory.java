package createPattern.Factory;

/**
 * 使用厂景
 * 在实际工作中，如果需要创建多种对象的时候，同时这些对象又有极大的相似点，可以考虑使用工厂设计模式
 *
 * 定义
 * 工厂方法模式定义了一个创建对象的接口，但由子类决定实例化的类是哪一个, 一个子类工厂对应着一个具体的产品
 * 工厂方法模式，让实例推迟到子类(建造模式中分为对象创建型和类创建型，工厂模式使用的是类创建模式)
 *
 * 工厂模式是面向接口编程的
 * 解决简单工厂模式中频繁增加的产品而导致的代码侵入
 *
 * 优势：符合开闭原则，新增分店的时候，不修改原来的分店，实现了解耦
 * 缺点：每增加一个店面，就需要增加一个新的实现类，类的个数会成倍增加，一定程度上增加了系统复杂度
 *
 */
public interface PizzaFactory {
    Pizza createPizza(String pizzaType);
}
